#2-pile nim
actions=[{"action_name":"take1","precondition":And(X >= k_num, k_num >= 1),"transition_formula": And(And(X >= k_num, k_num >= 1), Y == X - k_num, Y1 == X1)},
         {"action_name": "take2", "precondition": And(X1 >= k_num, k_num >= 1),"transition_formula": And(And(X1 >= k_num, k_num >= 1),Y1 == X1 - k_num,Y == X)}]
Game= {"Terminal_Condition":And(X == 0, X1 == 0),
       "actions":actions,
       "Constraint":And(X >= 0, X1 >= 0),
       "var_num":2,
       "appeal_constants":[]}
The Winning formula of this game is: Not(X == X1)
Covers of this game: ['X<X1', 'X>X1'] 
winning strategy: [[X < X1, 'take2(X1 + -1*X)'], [X > X1, 'take1(X + -1*X1)']]    

#Chomp game
actions=[{"action_name":"eat1","precondition":And(X >= k_num, k_num > 1),"transition_formula": And(And(X >= k_num, k_num > 1), Y == k_num - 1,Implies(X1 >= k_num, Y1 == k_num - 1),Or(X1 >= k_num, Y1 == X1))},
         {"action_name": "eat2", "precondition": And(X1 >= k_num, k_num > 0),"transition_formula": And(And(X1 >= k_num, k_num > 0), Y1 == k_num - 1, Y == X)}]
Game= {"Terminal_Condition":And(X == 1, X1 == 0),
       "actions":actions,
       "Constraint":And(X >= 1, X1 >= 0, X >= X1),
       "var_num":2,
       "appeal_constants":[]}
The Winning formula of this game is: Not(X == X1 + 1)
Covers of this game: ['X<X1+1', 'X>X1+1']
winning strategy: [[X < X1 + 1, 'eat2(X)'], [X > X1 + 1, 'eat1(2 + X1)']]

#Monotonic_two_piled_wythoff_game